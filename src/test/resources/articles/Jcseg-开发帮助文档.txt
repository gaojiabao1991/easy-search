                     Jcseg      开源中文分词器开发帮助文档
                        (注: 该文档只适用于              1.8.8   及其以后的版本)

一. 关于      jcseg:
     jcseg  是使用     Java  开发的一款开源的中文分词器, 使用                      mmseg     算法. 分词准确率高达
98.4%, 支持中文人名识别, 同义词匹配, 停止词过滤..., 详情请查看                                    jcseg  官方首页.
     官方首页:  https://code.google.com/p/jcseg/
     下载地址: https://code.google.com/p/jcseg/downloads/list
      git 源码： http://git.oschina.net/lionsoul/jcseg

     Jcseg  详细功能介绍: (可以略过, 方便查看新版本功能变化)

     1。目前最高版本：jcseg-1.9.5。兼容最高版本                 lucene, solr, elasticsearch
     2。三种切分模式：
         (1).简易模式：FMM        算法，适合速度要求场合。
         (2).复杂模式-MMSEG        四种过滤算法，具有较高的岐义去除，分词准确率达到了                            98.41%。
         (3).检测模式：只返回词库中已有的词条，很适合某些应用场合。(1.9.4                             开始)
     3。支持自定义词库。在           lexicon 文件夹下，可以随便添加/删除/更改词库和词库内容，并且对词库进行了
分类。参考下面了解如何给              jcseg 添加词库/新词。
     4。(!New) 支持词库多目录加载. 配置          lexicon.path 中使用';'隔开多个词库目录。
     5。(!New)词库分为简体/繁体/简繁体混合词库: 可以专门适用于简体切分, 繁体切分, 简繁体混合切分, 并
且可以利用下面提到的同义词实现,简繁体的相互检索,  jcseg                        同时提供了词库两个简单的词库管理工具来进行
简繁体的转换和词库的合并。
     6。中英文同义词追加/同义词匹配 + 中文词条拼音追加．词库整合了《现代汉语词典》和                                       cc-cedict 辞典
中的词条，并且依据           cc-cedict 词典为词条标上了拼音，依据《中华同义词词典》为词条标上了同义词(尚未完
成)。更改     jcseg.properties 配置文档可以在分词的时候加入拼音和同义词到分词结果中。 jcseg                            新版词库 
     7。中文数字和中文分数识别，例如："一百五十个人都来了，四十分之一的人。"中的"一百五十"和"四十
分之一"。并且       jcseg 会自动将其转换为阿拉伯数字加入到分词结果中。如：150， 1/40。
     8。支持中英混合词和英中混合词的识别(维护词库可以识别任何一种组合)。例如：B                                      超, x 射线, 卡拉    ok, 
奇都   ktv, 哆啦 a 梦。
     9。更好的英文支持，电子邮件，域名，小数，分数，百分数，字母和标点组合词（例如                                         C++, c#）的识
别。
     10。自定义保留标点, 例如: 保留&, 就可以识别                  k&r 这种复杂切分结果, 加上下面一条的功能, 可以完美
的适合检索      。
     11。(!New)复杂英文切分结果的二次切分: 例如                 QQ2013   会被切分成: qq2013/ qq/ 2013, 
chenxin619315@gmail.com   会被切分成: chenxin619315@gmail.com/ chenxin/ 619315/ gmail/ com。
     12。支持阿拉伯数字/小数/中文数字基本单字单位的识别，例如                            2012 年，1.75  米，38.6℃，五折，并且
jcseg 会将其转换为“5      折” 加入分词结果中。
     13。智能圆角半角, 英文大小写转换。
     14。特殊字母识别：例如：Ⅰ，Ⅱ
     15。特殊数字识别：例如：①，⑩
     16。配对标点内容提取：例如：最好的                  Java 书《java  编程思想》，‘畅想杯黑客技术大赛                ’，被《,‘,“,『标
点标记的内容。(1.6.8        版开始支持)。
     17。智能中文人名识别。中文人名识别正确率达                      94%以上。（可以维护          lex-lname.lex，lex-dname-
1.lex，lex-dname-2.lex 来提高准确率），(引入规则和词性后会达到        98%以上的识别正确率)。
   18。自动中英文停止词过滤功能（需要在            jcseg.properties 中开启该选项，lex-stopwords.lex 为停止词词
库）。
   19。词库更新自动加载功能, 开启一个守护线程随时检测词库的更新并且加载。
   20。(!New) 自动词性标注。
   21。jcseg.properties --- 方便自主对分词进行配置, 打造适合你的应用的分词。


二. 安装    jcseg: 
   先到   jcseg 官方地址下载最新版本的           jcseg: jcseg-{version}-src-jar-dict.zip, 
{version}表示版本号, 下同. 
   解压   jcseg-{version}-src-jar-dict.zip 到你要安装的目录即可. 例如: Linux: 
/java/jcseg, WinNT: D:/jcseg


三. 配置   jcseg: 

   jcseg 词库的加载以及很多功能的开启和关闭都可以在                      jcseg.properties 中配置.

   1. 基本配置:

   (1).让 jcseg 找到  jcseg.properties 配置文件:
   jcseg.properties 配置文件查找方式:
   1). jar home 路径搜索. 2). classpath 中搜索. 3). user home 路径搜索.
   jcseg.properties 配置文件查找顺序:  jcseg     首先会在    jar home 路径下搜索
jcseg.properties 配置文件, 如果没有找到, 接下来会在           classpath 中搜索(1.8.3 版中我已将一
份全部为默认选项的         jcseg.properties 文件放入了   jcseg-core-{version}.jar 中), 所以也就不会
出现配置文件查找不到的情况了, 另外当前版本的                    jcseg 还支持在    user home 下查找
jcseg.properties 文件(System.getProperty(“user.home”)来获取      user home  路径).
   对于使用默认选项的用户来说, 就不需要这个文件了, 如果需要自主配置该文档的, 将更
改后的   jcseg.properties 文件放在  jar home 即可.
   当然你也可以把更改后的            jcseg.properties 文件重新打包到     jcseg-core-{version}.jar 中去, 
基于需要修改的方便性, 通常放于             jar home 下, 来覆盖   jcseg-core-{version}.jar 中的默认配置.
   4). 自定义配置文件查找方式: 从              1.8.8 版本开始     jcseg 支持自定义配置文件查找
方式, 有利于复杂项目的配置文件的统一管理. 请看下面的                           Jcseg  二次开发.


   (2). 让 jcseg 找到词库:

   jcseg 找到   jcseg.properties 配置文件后, jcseg.properties    中 lexicon.path 的值就是
词库文件的绝对路径.
   例如, 你的   jcseg 安装在  D:/jcseg 中, 则:
   设置   jcseg.properties 中的 lexicon.path= D:/jcseg  /lexicon 
   此时, 词库文件的绝对路径为: lexicon.path, 即: D:/jcseg/lexicon
    lexicon.path 默认值为{jar.dir}/lexicon    表示   jar home/lexicon 目录下, 建议词库和        jar 文
件分开存放, 然后配置         lexicon.path 来指向词库.

    注: 从  jcseg 1.8.8  开始, 去掉了      jcseg.properties  中的   lexicon.dir  选项. 并且支持自
定义词库目录全部词库文件词条或者指定词库文件词条加载, 方便词库管理的二次开发. 请看
下面的    Jcseg  二次开发.

    提示: 词库不需要压缩到          jcseg jar 包中去, 也不建议这么做, 这样方便对词库进行随时的维护, 
词库可以放在任何地方, 只要在             jcseg.properties 中配置    lexicon.path 来指向词库目录即可.

    (3). 更多配置:
    你可以更改最大化匹配长度, 关闭或者开启中文人名识别, 关闭或者开启切分同义词追加, 关闭
或者开启停止词过滤功能..., 
    请参考下面的       jcseg.properties 配置项以及相关含义.

    修改后, 重启     jcseg 相关服务即可.

    2. jcseg.properties    配置项以及含义: (可以先不用理会)

    # jcseg function
    #-正向最大化匹配数目（建议位于               4-7 之间）。
    jcseg.maxlen=1

    #-开启中文人名识别(1.7.0         后, 0 关闭, 1  开启)。
    jcseg.icnname=1

    #-中英混合词最大中文词数，例如：A                 计划 A  后面有两个字“计划         ”。
    jcseg.mixcnlen=2

    #最大的配对标点内容长度。
    jcseg.pptmaxlen=15

    #-姓氏修饰词长度，例如：老陈 中的                “陈 ”(通常为   1)。
    jcseg.cnmaxlnadron=1

    #是否自动过滤停止词(0          关闭, 1   开启)
    jcseg.clearstopword=1

    #是否自动中文数字转阿拉伯数字(0                关闭, 1  开启)
    jcseg.cnnumtoarabic=1

    #是否自动中文分数转阿拉伯分数(0                关闭, 1  开启)
    jcseg.cnfratoarabic=1

    #-姓名成词歧义阕值(不用更改, 除非你知道你改了什么)。
    jcseg.nsthreshold=1000000

    #自动保留标点,用于识别负载的英文标点组合词.

    jcseg.keeppunctuations=@%.&+

    # about the lexicon
    #-词库文件前缀(例如: lex-main.lex)。
    lexicon.prefix=lex
    #-词库文件后缀(例如: lex-main.lex)。
    lexicon.suffix=lex

    #-词库存放路径({jar.dir}/lexicon 为默认路径, 表示词库位于                 jar 目录下的    lexicon 目录下)
    #从  jcseg-1.9.2 开始: 支持多目录加载词库.不同的路径使用';'隔开就可以了.
    #例如: lexicon.path=/java/jcseg/lex1;/java/jcseg/lex2
    lexicon.path={jar.dir}/lexicon

    #-是否词库更新自动加载(1           开启, 0  关闭)
    lexicon.autoload=1

    #-词库更新轮询时间(单位: 秒)
    lexicon.polltime=120

    # lexicon load
    #载入词库时是否载入词条的词性。(0                 关闭, 1  开启)
    jcseg.loadpos=0

    #载入词库时是否载入词条的拼音(1.7.0                后, 0 关闭, 1  开启)。
    jcseg.loadpinyin=1

    #载入词库时是否载入词条的同义词(0                 关闭, 1  开启)。
    jcseg.loadsyn=1

    #是否保留     Jcseg 不是别的字符.(1      保留, 0   关闭)
    jcseg.keepunregword=1

    #是否二次切分复杂的英文切分结果. (1                开启, 0  关闭)
    jcseg.ensencondseg = 1

    #最小二次切分长度. (建议大于             1)
    jcseg.stokenminlen = 2


四. 运行      jcseg   测试程序: 

    配置好后, 相信你想知道配置是否正确, 或者说想试试                          jcseg 的分词效果:
    切换到    jcseg 安装目录, 然后运行:

    java -jar jcseg-core-{version}.jar

你会看到各个配置项的当前值, 以及默认的分词效果, 和如下提示界面:

    +--------jcseg chinese word segment demo-------+
    |- Suggest email: chenxin619315@gmail.com  |
    |- Run :quit or :exit to exit.                                |
    +-------------------------------------------------------------------+
    jcseg>> 
在  jcseg>>提示符后输入你要分词的内容, 按                   enter  键即可.

例如: 

jcseg>> jcseg    是使用    java 开发的一款开源中文分词组件.
分词结果：
jcseg 使用 java 开发      一款   开源   中文分词      组件
Done, total:26, split:8, cost: 0.00000sec

total 为总字符数, split     为切分之后的词条数, cost            为耗费的时间.


五. lucene    分词用法:


    //导入  jcseg-core-{version}.jar 和 jcseg-analyzer-{version}.jar

    /**
    1.JcsegTaskConfig.COMPLEX_MODE      为复杂模式：
    特点：四种过滤算法。*/

    /**
    2.JcsegTaskConfig.SIMPLE_MODE     为简易模式
    特点：只使用了最大化过滤算法，其他的同复杂模式。
    */
    Analyzer analyzer = new JcsegAnalyzer4X(JcsegTaskConfig.COMPLEX_MODE);

    //非必须(用于修改默认配置): 获取分词任务配置实例
    JcsegAnalyzer4X jcseg = (JcsegAnalyzer4X) analyzer;
    JcsegTaskConfig config = jcseg.getTaskConfig();
 
    //追加同义词到分词结果中, 需要在                jcseg.properties    中配置   jcseg.loadsyn=1
    config.setAppendCJKSyn(true); 
    //追加拼音到分词结果中, 需要在               jcseg.properties    中配置   jcseg.loadpinyin=1
    config.setAppendCJKPinyin();
    //更多配置, 请查看        com.webssky.jcseg.core.JcsegTaskConfig         类

接下来把     analyzer  给  lucene  即可.


六. solr  分词用法:
