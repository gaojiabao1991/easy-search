
                      


                                                                             
                      
                                          MEAP Edition 
                             Manning Early Access Program 
                                       Big Data version 9 
                                                      
                                                      
                                                      
                                                      
                                                      
                                                      
                                                      
                                                      
                                                      
                                                      
                                                      
                              Copyright 2013 Manning Publications 
                                                      
                 For more information on this and other Manning titles go to  
                                         www.manning.com 


©Manning Publications Co. We welcome reader comments about anything in the manuscript - other than typos and 
 other simple mistakes. These will be cleaned up during production of the book by copyeditors and proofreaders. 
                Licensedhttp://www.manning-sandbox.com/forum.jspa?forumID=787 to zhailiang UNKNOWN <zhailiang@belink.com>
                                          brief contents 
    

      1. A new paradigm for Big Data 

      2. Data model for Big Data 

      3. Data storage on the batch layer 

      4. Batch layer: scalability 

      5. Batch layer: Abstraction and composition 

      6. Batch layer: Tying it all together 

      7. Serving layer 

      8. Speed layer: Scalability and fault-tolerance 

      9. Speed layer: Abstraction and composition 

      10. Incremental batch processing 

      11. Lambda architecture in-depth 

      12. Piping the system together 

      13. Future of NoSQL and Big Data processing 

                 


©Manning Publications Co. We welcome reader comments about anything in the manuscript - other than typos and 
 other simple mistakes. These will be cleaned up during production of the book by copyeditors and proofreaders. 
         Licensedhttp://www.manning-sandbox.com/forum.jspa?forumID=787 to zhailiang UNKNOWN <zhailiang@belink.com>
                                                               1
                    A New Paradigm for Big1 Data
The  data  we  deal  with  is  diverse.  Users  create  content  like  blog  posts,  tweets,
social network interactions, and photos. Servers continuously log messages about
what they're doing. Scientists create detailed measurements of the world around us.
The internet, the ultimate source of data, is almost incomprehensibly large.
  This astonishing growth in data has profoundly affected businesses. Traditional
database systems, such as relational databases, have been pushed to the limit. In an
increasing number of cases these systems are breaking under the pressures of "Big
Data." Traditional systems, and the data management techniques associated with
them, have failed to scale to Big Data.
  To tackle the challenges of Big Data, a new breed of technologies has emerged.
Many of these new technologies have been grouped under the term "NoSQL." In
some ways these new technologies are more complex than traditional databases,
and in other ways they are simpler. These systems can scale to vastly larger sets of
data, but using these technologies effectively requires a fundamentally new set of
techniques. They are not one-size-fits-all solutions.
  Many  of  these  Big  Data  systems  were  pioneered  by  Google,  including
distributed  filesystems,  the  MapReduce  computation  framework,  and  distributed
locking services. Another notable pioneer in the space was Amazon, which created
an  innovative  distributed  key-value  store  called  Dynamo.  The  open  source
community  responded  in  the  years  following  with  Hadoop,  HBase,  MongoDB,
Cassandra, RabbitMQ, and countless other projects.
  This book is about complexity as much as it is about scalability. In order to
meet the challenges of Big Data, you must rethink data systems from the ground
up. You will discover that some of the most basic ways people manage data in
traditional systems like the relational database management system (RDBMS) is


     ©Manning Publications Co. We welcome reader comments about anything in the manuscript - other than typos and 
     other simple mistakes. These will be cleaned up during production of the book by copyeditors and proofreaders. 
             Licensedhttp://www.manning-sandbox.com/forum.jspa?forumID=787 to zhailiang UNKNOWN <zhailiang@belink.com>
 2

   too complex for Big Data systems. The simpler, alternative approach is the new
   paradigm for Big Data that you will be exploring. We, the authors, have dubbed
   this approach the "Lambda Architecture".
     In  this  chapter,  you  will  explore  the  "Big  Data  problem"  and  why  a  new
   paradigm for Big Data is needed. You'll see the perils of some of the traditional
   techniques  for  scaling  and  discover  some  deep  flaws  in  the  traditional  way  of
   building data systems. Then, starting from first principles of data systems, you'll
   learn a different way to build data systems that avoids the complexity of traditional
   techniques. Finally you'll take a look at an example Big Data system that we'll be
   building throughout this book to illustrate the key concepts.
1.1 What this book is and is not about
   This book is not a survey of database, computation, and other related technologies.
   While you will learn how to use many of these tools throughout this book, such as
   Hadoop, Cassandra, Storm, and Thrift, the goal of this book is not to learn those
   tools  as  an  end  upon  themselves.  Rather,  the  tools  are  a  means  to  learning  the
   underlying principles of architecting robust and scalable data systems.
     Put  another  way,  you  are  going  to  learn  how  to  fish,  not  just  how  to  use  a
   particular fishing rod. Different situations require different tools. If you understand
   the  underlying  principles  of  building  these  systems,  then  you  will  be  able  to
   effectively map the requirements to the right set of tools.
     At  many  points  in  this  book,  there  will  be  a  choice  of  technologies  to  use.
   Doing  an  involved  compare-and-contrast  between  the  tools  would  not  be  doing
   you,  the  reader,  justice,  as  that  just  distracts  from  learning  the  principles  of
   building  data  systems.  Instead,  the  approach  we  take  is  to  make  clear  the
   requirements  for  a  particular  situation,  and  explain  why  a  particular  tool  meets
   those requirements. Then, we will use that tool to illustrate the application of the
   concepts.  For  example,  we  will  be  using  Thrift  as  the  tool  for  specifying  data
   schemas  and  Cassandra  for  storing  realtime  state.  Both  of  these  tools  have
   alternatives, but that doesn't matter for the purposes of this book since these tools
   are sufficient for illustrating the underlying concepts.
     By  the  end  of  this  book,  you  will  have  a  thorough  understanding  of  the
   principles of data systems. You will be able to use that understanding to choose the
   right tools for your specific application.
     Let's begin our exploration of data systems by seeing what can go wrong when
   using traditional tools to solve Big Data problems.


        ©Manning Publications Co. We welcome reader comments about anything in the manuscript - other than typos and 
        other simple mistakes. These will be cleaned up during production of the book by copyeditors and proofreaders. 
                Licensedhttp://www.manning-sandbox.com/forum.jspa?forumID=787 to zhailiang UNKNOWN <zhailiang@belink.com>
